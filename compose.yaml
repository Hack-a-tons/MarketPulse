services:
  # Redpanda - Kafka-compatible streaming platform
  redpanda:
    image: redpandadata/redpanda:latest
    container_name: marketpulse-redpanda
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:${REDPANDA_PORT}
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:${REDPANDA_PORT}
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    ports:
      # External:Internal port mapping
      # External ports (round numbers) from .env, internal ports (standard Kafka/Redpanda)
      - "${REDPANDA_PORT}:9092"          # Kafka API (external: 19000 -> internal: 9092)
      - "${REDPANDA_ADMIN_PORT}:9644"    # Admin API (external: 20000 -> internal: 9644)
      - "18081:8081"                      # Schema Registry
      - "18082:8082"                      # HTTP Proxy
    networks:
      - marketpulse-network
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  # Market Pulse API Service - Phase 1 Implementation
  pulse-service:
    build: .
    container_name: marketpulse-api
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - REDPANDA_BROKERS=redpanda:9092
      - DATA_START_DATE=${DATA_START_DATE}
      - DATA_END_DATE=${DATA_END_DATE}
      - REDPANDA_TOPIC_NEWS=${REDPANDA_TOPIC_NEWS}
      - REDPANDA_TOPIC_PRICES=${REDPANDA_TOPIC_PRICES}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      redpanda:
        condition: service_healthy
    networks:
      - marketpulse-network
    volumes:
      - ./data:/app/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT}/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

networks:
  marketpulse-network:
    driver: bridge

volumes:
  redpanda-data:
